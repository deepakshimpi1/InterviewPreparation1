## Enitity Framework

- An Entity Framework (EF) is an open-source ORM (Object-Relational Mapper) from Microsoft. 
- It allows developers to work with .NET applications and other domain-specific objects
- Entity framework does not focus on the original database columns and tables used to store data.
- It automatically creates codes for the data access layers, intermediate layers, and mapping codes. 
- This eventually helps developers cut down the development of work and time.

## Why should we use the Entity Framework?

- writing and managing ADO.NET codes is a problematic task. 
- Therefore, Microsoft introduced the `Entity Framework` to make this tedious task more manageable. 
- Entity Framework reduces a significant amount of code-based tasks by providing relational data in the form of domain-specific objects.

## What is ADO.NET EF?

- ADO.NET Entity Framework is an ORM framework 
- Allows us to work with different relational databases, such as Oracle, MYSQL, SQL Server, DB2, etc. 
- It enables us to work with the data either as objects or entities.

## Main components of the Entity Framework Architecture.

- `Entity Data Model (EDM):` It consists of the three parts, such as storage model, conceptual model, and mapping.
- `Entity SQL:` It is an alternate query language used in Entity Frameworks.
- `LINQ to Entities (L2E):` It is a query language that helps write queries against the object, which further helps to retrieve the entities based on the definitions specifies in the conceptual model.
- `Entity Client Data Provider:` It is defined as the layer that helps convert the L2E queries to SQL queries to be easily understood by the database. Additionally, it can interact with the ADO.NET data provider to transfer or retrieve data from different databases.
- `Net Data Provider:` It is another layer that helps interact with the database by using standard ADO.NET.
- `Object Service:` It is an entry point into the database used to access and send back the data when needed. It helps convert the data coming from an entity client data provider into an entity object structure.

## Primary functions of the Entity Framework?

- Map domain classes to the database schema.
- It helps execute LINQ queries to SQL.
- It keeps tracks of changes in the entities.

## What are the processes used to load related entities in the Entity Framework?

`Lazy Loading:` 
- This process delays the loading of related objects until there is a requirement of them. 
- Lazy loading only returns objects needed by the user, and all other related objects are only returned when required in the process.

`Eager Loading:` 
- This process mainly takes place when we query for an object. 
- Eager loading returns all the related objects. Additionally, all the related objects are automatically loaded with the parent object.

## What are the different types of inheritance supported in Entity Framework?

- Table per Hierarchy (TPH)
- Table per Type (TPT)
- Table per Concrete Class (TPC)

## Primary parts of the Entity Data Model?

There are mainly three parts of the Entity Data Model, such as:
- Storage Model
- Conceptual Model
- Mapping

## What is meant by a model in context to Entity Framework?

- A model is nothing but a class mainly used to represent the data.
- In context to EF, a model represents the data from a table inside the existing database.

Example: The following codes display the basic customer model:
```EF
public class Customer  
{  
  public int ID { get; set; }  
  public string Name { get; set; }  
  public DateTime JoinDate { get; set; }  
}  
```

## LINQ vs EF

Linq:
- It only operates with the help of the SQL Server Database.	
- It supports one to one mapping between entity classes and the relational tables.
- It maintains a relation by creating a .dbml file.
- It does not support complex types.
- It cannot generate a database by using the model.
- It enables users to query the data with DataContext.
- It contains a tightly coupled mechanism.	
- It is mainly used for faster application developments with SQL Server.

EF:
- It has various databases, such as SQL Server, MYSQL, Oracle, DB2, etc.
- It supports one to one, one to many, and many to many mapping types between the entity classes and the relational tables.
- It first creates the .edmx file. After that, it maintains a relation using three types of files: .ssdl, .msl and .csdl.
- It supports complex types.
- It can generate a database using the model.
- It allows users to query the data with DbContext, ObjectContext, and EntitySQL.
- It contains a loosely coupled mechanism.
- It is primarily used for faster application developments using SQL Server and other databases like MYSQL, Oracle, DB2, etc.









